--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.16) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v69=(v31/((5 -(3 + 0))^(v32-(2 -1))))%((3 -1)^(((v33-((1067 -(68 + 997)) -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v69-(v69%(569 -((1637 -(226 + 1044)) + 201))) ;else local v70=927 -(214 + 713) ;local v71;while true do if (v70==(0 + 0)) then v71=2^(v32-(1 + 0)) ;return (((v31%(v71 + v71))>=v71) and (878 -(282 + 595))) or (1637 -((2170 -647) + 114)) ;end end end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34=0 -0 ;local v35;local v36;local v37;local v38;while true do if (v34==(1 -0)) then return (v38 * (16777333 -(32 + (1037 -(802 + 150))))) + (v37 * (64226 + 1310)) + (v36 * (57 + 199)) + v35 ;end if (v34==(957 -((2401 -1509) + 65))) then v35,v36,v37,v38=v1(v16,v19,v19 + (5 -2) + 0 );v19=v19 + (9 -5) ;v34=1;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v39=0 + 0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39~=4) then else while true do if (v40~=0) then else v41=0 + 0 ;v42=nil;v40=397 -(115 + 281) ;end if ((6 -3)==v40) then v47=nil;while true do local v103=0 + 0 ;local v104;while true do if (v103==0) then v104=0 -0 ;while true do if (0==v104) then local v110=0;while true do if (v110==(0 -0)) then local v136=0;while true do if (v136~=(867 -(550 + 317))) then else if (v41==(1 -0)) then local v210=0 -0 ;while true do if (v210==0) then v46=v24();v47={};v210=2 -1 ;end if (1==v210) then local v219=0;while true do if (0~=v219) then else for v227=286 -(134 + 151) ,v46 do local v228=1665 -(970 + 695) ;local v229;local v230;local v231;while true do if (v228==(1 -0)) then v231=nil;while true do if (v229==(1991 -(582 + 1408))) then if (v230==(3 -2)) then v231=v22()~=(0 -0) ;elseif (v230==(7 -5)) then v231=v25();elseif (v230==(1827 -(1195 + 629))) then v231=v26();end v47[v227]=v231;break;end if (v229==(0 -0)) then local v239=0;while true do if (v239==1) then v229=242 -(187 + 54) ;break;end if (v239~=0) then else local v246=0;while true do if (v246==(780 -(162 + 618))) then v230=v22();v231=nil;v246=1 + 0 ;end if (v246==1) then v239=1;break;end end end end end end break;end if (v228==0) then v229=0 + 0 ;v230=nil;v228=1 -0 ;end end end v45[3]=v22();v219=1 -0 ;end if (v219~=(1 + 0)) then else v210=2;break;end end end if (v210==2) then v41=1638 -(1373 + 263) ;break;end end end if (v41==(1000 -(451 + 549))) then local v211=0;while true do if (v211==0) then local v220=0;local v221;while true do if (v220==(0 + 0)) then v221=0;while true do if (v221==1) then v211=1 -0 ;break;end if (0~=v221) then else v42={};v43={};v221=1 -0 ;end end break;end end end if (v211==1) then local v222=1384 -(746 + 638) ;local v223;while true do if (v222==(0 + 0)) then v223=0;while true do if (v223==(0 -0)) then v44={};v45={v42,v43,nil,v44};v223=1;end if (1==v223) then v211=2 + 0 ;break;end end break;end end end if (v211~=2) then else v41=1 + 0 ;break;end end end v136=1;end if ((561 -(306 + 254))~=v136) then else v110=1 + 0 ;break;end end end if (v110~=(1 -0)) then else v104=1468 -(899 + 568) ;break;end end end if ((1 + 0)==v104) then if (v41==(4 -2)) then local v111=603 -(268 + 335) ;local v112;while true do if (v111==0) then v112=290 -(60 + 230) ;while true do if ((573 -(426 + 146))==v112) then return v45;end if (v112~=(0 + 0)) then else local v212=0;local v213;while true do if ((1456 -(282 + 1174))~=v212) then else v213=811 -(569 + 242) ;while true do if (v213==(0 -0)) then for v232=1 + 0 ,v24() do local v233=0;local v234;local v235;while true do if ((1025 -(706 + 318))~=v233) then else while true do if (v234~=0) then else v235=v22();if (v21(v235,1,1252 -(721 + 530) )~=(1271 -(945 + 326))) then else local v240=0;local v241;local v242;local v243;local v244;local v245;while true do if (v240~=(2 -1)) then else v243=nil;v244=nil;v240=2;end if (v240==(2 + 0)) then v245=nil;while true do if (2==v241) then while true do if (v242==(703 -(271 + 429))) then if (v21(v244,3,3 + 0 )~=(1501 -(1408 + 92))) then else v245[4]=v47[v245[1090 -(461 + 625) ]];end v42[v232]=v245;break;end if (v242==(1289 -(993 + 295))) then local v249=0 + 0 ;while true do if (v249~=(1171 -(418 + 753))) then else local v255=0;while true do if (v255==(0 + 0)) then v245={v23(),v23(),nil,nil};if (v243==0) then local v257=0;local v258;local v259;while true do if (v257~=(1770 -(1749 + 20))) then else while true do if (v258~=(0 + 0)) then else v259=0;while true do if (v259==(1322 -(1249 + 73))) then v245[2 + 1 ]=v23();v245[1149 -(466 + 679) ]=v23();break;end end break;end end break;end if (v257~=(0 -0)) then else v258=0 -0 ;v259=nil;v257=1;end end elseif (v243==1) then v245[1903 -(106 + 1794) ]=v24();elseif (v243==2) then v245[1 + 2 ]=v24() -((1 + 1)^(46 -30)) ;elseif (v243==3) then local v266=0 -0 ;local v267;local v268;local v269;while true do if (v266~=0) then else v267=114 -(4 + 110) ;v268=nil;v266=1;end if (v266==(585 -(57 + 527))) then v269=nil;while true do if (v267==0) then v268=1427 -(41 + 1386) ;v269=nil;v267=104 -(17 + 86) ;end if (v267==1) then while true do if (v268==0) then v269=0;while true do if (v269==0) then v245[3]=v24() -(2^16) ;v245[3 + 1 ]=v23();break;end end break;end end break;end end break;end end end v255=1 -0 ;end if (v255==(2 -1)) then v249=1;break;end end end if ((167 -(122 + 44))==v249) then v242=2 -0 ;break;end end end if (v242==(6 -4)) then local v250=0;local v251;while true do if (0~=v250) then else v251=0;while true do if (v251==0) then local v256=0;while true do if (v256~=0) then else if (v21(v244,1 + 0 ,1)==1) then v245[1 + 1 ]=v47[v245[3 -1 ]];end if (v21(v244,2,67 -(30 + 35) )==1) then v245[3 + 0 ]=v47[v245[3]];end v256=1;end if (v256~=1) then else v251=1;break;end end end if (1~=v251) then else v242=1260 -(1043 + 214) ;break;end end break;end end end if (v242==0) then local v252=0 -0 ;while true do if (v252==(1212 -(323 + 889))) then v243=v21(v235,5 -3 ,3);v244=v21(v235,4,586 -(361 + 219) );v252=321 -(53 + 267) ;end if (v252==(1 + 0)) then v242=414 -(15 + 398) ;break;end end end end break;end if (v241==1) then local v247=982 -(18 + 964) ;while true do if (v247~=(0 -0)) then else v244=nil;v245=nil;v247=1;end if (v247==(1 + 0)) then v241=2 + 0 ;break;end end end if (v241~=(850 -(20 + 830))) then else v242=0 + 0 ;v243=nil;v241=1;end end break;end if (v240~=0) then else v241=0;v242=nil;v240=127 -(116 + 10) ;end end end break;end end break;end if ((0 + 0)==v233) then v234=738 -(542 + 196) ;v235=nil;v233=1;end end end for v236=1 -0 ,v24() do v43[v236-1 ]=v29();end v213=1;end if (v213~=(1 + 0)) then else v112=1;break;end end break;end end end end break;end end end break;end end break;end end end break;end if (v40==(1 + 0)) then local v101=0;while true do if (v101==0) then v43=nil;v44=nil;v101=1 + 0 ;end if (v101==1) then v40=2;break;end end end if ((4 -2)==v40) then local v102=0;while true do if (v102==(0 -0)) then v45=nil;v46=nil;v102=1552 -(1126 + 425) ;end if (v102~=(406 -(118 + 287))) then else v40=3;break;end end end end break;end if (v39~=(0 -0)) then else local v74=1121 -(118 + 1003) ;while true do if (v74==(2 -1)) then v39=1;break;end if (v74~=0) then else v40=0;v41=nil;v74=1;end end end if (v39==(379 -(142 + 235))) then v44=nil;v45=nil;v39=13 -10 ;end if (v39==1) then local v75=0;while true do if (v75==1) then v39=1 + 1 ;break;end if (v75==(977 -(553 + 424))) then v42=nil;v43=nil;v75=1 -0 ;end end end if (v39~=(3 + 0)) then else local v76=0 + 0 ;while true do if (1==v76) then v39=3 + 1 ;break;end if (v76~=0) then else v46=nil;v47=nil;v76=1;end end end end end v30=nil;v18=7;end if (v18==4) then function v25()local v48=v24();local v49=v24();local v50=(1662 -(1477 + 184)) -0 ;local v51=(v21(v49,1 -0 ,258 -(64 + 174) ) * ((1 + 1)^((25 -6) + 13))) + v48 ;local v52=v21(v49,45 -24 ,247 -(42 + 174) );local v53=((v21(v49,88 -(53 + 3) )==(2 -(857 -(564 + 292)))) and  -(1 + 0)) or (4 -3) ;if (v52==(753 -(239 + 514))) then if (v51==(0 + 0)) then return v53 * ((2292 -963) -(797 + 532)) ;else local v80=0 + 0 ;while true do if ((0 + 0)==v80) then v52=1 + 0 ;v50=(0 -0) -0 ;break;end end end elseif (v52==(3249 -(373 + 829))) then return ((v51==((1035 -(244 + 60)) -(476 + 255))) and (v53 * ((1131 -(284 + 85 + (1237 -(41 + 435))))/((1001 -(938 + 63)) + 0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-(2707 -1684) ) * (v50 + (v51/((1935 -(565 + 1368))^(31 + 21)))) ;end v26=nil;function v26(v54)local v55=1125 -(936 + 189) ;local v56;local v57;while true do if (v55==(1 + 0)) then v56=v3(v16,v19,(v19 + v54) -(1614 -(1565 + 48)) );v19=v19 + v54 ;v55=2 + 0 ;end if (v55==(2 + 0)) then v57={};for v81=1139 -(782 + 356) , #v56 do v57[v81]=v2(v1(v3(v56,v81,v81)));end v55=270 -(176 + 91) ;end if (v55==(7 -4)) then return v6(v57);end if (v55==(0 -0)) then v56=nil;if  not v54 then local v97=0;while true do if (v97==0) then v54=v24();if (v54==((3876 -2784) -((3333 -2358) + 117))) then return "";end break;end end end v55=1876 -(157 + 1718) ;end end end v18=5;end if (v18==2) then function v22()local v58=v1(v16,v19,v19);v19=v19 + 1 ;return v58;end v23=nil;function v23()local v59,v60=v1(v16,v19,v19 + (1020 -(697 + 321)) );v19=v19 + (3 -1) ;return (v60 * (590 -334)) + v59 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v61)if (v1(v61,2)==79) then v20=v0(v3(v61,1,1));return "";else local v72=0;local v73;while true do if (v72==0) then v73=v2(v0(v61,16));if v20 then local v105=v5(v73,v20);v20=nil;return v105;else return v73;end break;end end end end);v18=1;end if (v18==7) then function v30(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end if (v65==1) then v68=v62[3];return function(...)local v83=v66;local v84=v67;local v85=v68;local v86=v28;local v87=1;local v88= -1;local v89={};local v90={...};local v91=v12("#",...) -1 ;local v92={};local v93={};for v98=0,v91 do if (v98>=v85) then v89[v98-v85 ]=v90[v98 + 1 ];else v93[v98]=v90[v98 + 1 ];end end local v94=(v91-v85) + 1 ;local v95;local v96;while true do v95=v83[v87];v96=v95[1];if (v96<=24) then if (v96<=11) then if (v96<=5) then if (v96<=2) then if (v96<=0) then v93[v95[2]]=v93[v95[3]][v95[4]];elseif (v96>1) then v93[v95[2]]={};else local v138=v95[2];v93[v138]=v93[v138](v13(v93,v138 + 1 ,v95[3]));end elseif (v96<=3) then v64[v95[3]]=v93[v95[2]];elseif (v96>4) then local v140=0;local v141;while true do if (v140==0) then v141=v95[2];v93[v141](v13(v93,v141 + 1 ,v95[3]));break;end end else v93[v95[2]]=v95[3];end elseif (v96<=8) then if (v96<=6) then do return;end elseif (v96>7) then v87=v95[3];elseif (v95[2]==v93[v95[4]]) then v87=v87 + 1 ;else v87=v95[3];end elseif (v96<=9) then local v117=v95[2];v93[v117]=v93[v117](v13(v93,v117 + 1 ,v88));elseif (v96>10) then local v145=v95[2];v93[v145]=v93[v145]();elseif v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end elseif (v96<=17) then if (v96<=14) then if (v96<=12) then v93[v95[2]]=v95[3];elseif (v96>13) then v93[v95[2]]();else v93[v95[2]][v95[3]]=v95[4];end elseif (v96<=15) then local v121=v95[2];local v122=v93[v95[3]];v93[v121 + 1 ]=v122;v93[v121]=v122[v95[4]];elseif (v96==16) then v93[v95[2]]();else local v149=v95[2];v93[v149]=v93[v149](v13(v93,v149 + 1 ,v88));end elseif (v96<=20) then if (v96<=18) then local v126=v95[2];v93[v126]=v93[v126](v93[v126 + 1 ]);elseif (v96==19) then v93[v95[2]]=v64[v95[3]];else for v190=v95[2],v95[3] do v93[v190]=nil;end end elseif (v96<=22) then if (v96==21) then do return;end else v93[v95[2]]=v95[3]~=0 ;end elseif (v96>23) then v93[v95[2]]=v93[v95[3]];else do return v93[v95[2]];end end elseif (v96<=37) then if (v96<=30) then if (v96<=27) then if (v96<=25) then v64[v95[3]]=v93[v95[2]];elseif (v96>26) then local v156=0;local v157;local v158;while true do if (v156==0) then v157=v95[2];v158=v93[v95[3]];v156=1;end if (1==v156) then v93[v157 + 1 ]=v158;v93[v157]=v158[v95[4]];break;end end else v93[v95[2]]=v30(v84[v95[3]],nil,v64);end elseif (v96<=28) then if (v95[2]==v93[v95[4]]) then v87=v87 + 1 ;else v87=v95[3];end elseif (v96>29) then do return v93[v95[2]];end else v93[v95[2]]={};end elseif (v96<=33) then if (v96<=31) then local v130=v95[2];v93[v130]=v93[v130]();elseif (v96>32) then local v162=0;local v163;local v164;local v165;local v166;while true do if (v162==1) then v88=(v165 + v163) -1 ;v166=0;v162=2;end if (v162==2) then for v214=v163,v88 do local v215=0;while true do if (0==v215) then v166=v166 + 1 ;v93[v214]=v164[v166];break;end end end break;end if (v162==0) then v163=v95[2];v164,v165=v86(v93[v163](v13(v93,v163 + 1 ,v95[3])));v162=1;end end else v93[v95[2]][v95[3]]=v93[v95[4]];end elseif (v96<=35) then if (v96>34) then if (v93[v95[2]]==v95[4]) then v87=v87 + 1 ;else v87=v95[3];end else local v169=0;local v170;while true do if (v169==0) then v170=v95[2];v93[v170]=v93[v170](v13(v93,v170 + 1 ,v95[3]));break;end end end elseif (v96==36) then v87=v95[3];elseif v93[v95[2]] then v87=v87 + 1 ;else v87=v95[3];end elseif (v96<=43) then if (v96<=40) then if (v96<=38) then v93[v95[2]]=v30(v84[v95[3]],nil,v64);elseif (v96==39) then v93[v95[2]]=v64[v95[3]];else v93[v95[2]][v95[3]]=v93[v95[4]];end elseif (v96<=41) then v93[v95[2]]=v95[3]~=0 ;elseif (v96==42) then local v176=v95[2];v93[v176]=v93[v176](v93[v176 + 1 ]);else local v178=0;local v179;while true do if (0==v178) then v179=v95[2];do return v13(v93,v179,v179 + v95[3] );end break;end end end elseif (v96<=46) then if (v96<=44) then v93[v95[2]]=v93[v95[3]];elseif (v96>45) then v93[v95[2]]=v93[v95[3]][v95[4]];else local v182=v95[2];v93[v182](v13(v93,v182 + 1 ,v95[3]));end elseif (v96<=48) then if (v96>47) then if (v93[v95[2]]==v95[4]) then v87=v87 + 1 ;else v87=v95[3];end else v93[v95[2]][v95[3]]=v95[4];end elseif (v96==49) then local v185=0;local v186;local v187;local v188;local v189;while true do if (v185==0) then v186=v95[2];v187,v188=v86(v93[v186](v13(v93,v186 + 1 ,v95[3])));v185=1;end if (v185==2) then for v216=v186,v88 do v189=v189 + 1 ;v93[v216]=v187[v189];end break;end if (v185==1) then v88=(v188 + v186) -1 ;v189=0;v185=2;end end else for v192=v95[2],v95[3] do v93[v192]=nil;end end v87=v87 + 1 ;end end;end end end return v30(v29(),{},v17)(...);end end end vv9(),...);